/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UniEnrolmentProgram;

import java.util.HashMap;
import java.util.InputMismatchException;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author linh
 */
public class GUIAdmin extends javax.swing.JFrame {
    
    UniversityAdmin admin;
    /**
     * Creates new customizer GUIStudent
     */
    public GUIAdmin(UniversityAdmin admin) {
        this.admin=admin;
        initComponents();
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the FormEditor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        displayOptions = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        displayTable = new javax.swing.JTable();
        addStudentButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        addSubjectButton = new javax.swing.JButton();
        addCourseButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        exitButton = new javax.swing.JButton();
        assignButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        sjInCourseTable = new javax.swing.JTable();
        addButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        courseInfoText = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        courseComboBox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        subjectRecordTable = new javax.swing.JTable();
        withdrawButton = new javax.swing.JButton();
        enrollButton = new javax.swing.JButton();
        studentLabel = new javax.swing.JLabel();
        studentIDText = new javax.swing.JTextField();
        findStudentButton = new javax.swing.JButton();
        studentInfo = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        subjectList = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        recordTable = new javax.swing.JTable();
        recordMarkButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        reportComboBox = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        reportTable = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();

        jTabbedPane1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jTabbedPane1ComponentHidden(evt);
            }
        });

        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });
        jPanel1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel1ComponentShown(evt);
            }
        });

        displayOptions.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        displayOptions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayOptionsActionPerformed(evt);
            }
        });

        displayTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(displayTable);

        addStudentButton.setText("Add Student");
        addStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Show all:");

        addSubjectButton.setText("Add Subject");
        addSubjectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSubjectButtonActionPerformed(evt);
            }
        });

        addCourseButton.setText("Add Course");
        addCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseButtonActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 3, 36)); // NOI18N
        jLabel4.setText("Welcome back, Admin");

        exitButton.setText("Log out");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        assignButton.setText("Assign Subject to a Lecturer");
        assignButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignButtonActionPerformed(evt);
            }
        });

        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(194, 194, 194)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 134, Short.MAX_VALUE)
                .addComponent(exitButton)
                .addGap(70, 70, 70))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(330, 330, 330)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(displayOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(addSubjectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(113, 113, 113)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(assignButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addStudentButton, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE))
                        .addGap(71, 71, 71)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addCourseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(editButton)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 817, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(exitButton)))
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(displayOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(35, 35, 35)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addSubjectButton)
                    .addComponent(addStudentButton)
                    .addComponent(addCourseButton))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assignButton)
                    .addComponent(editButton))
                .addContainerGap(243, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Information", jPanel1);

        jPanel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel4MouseClicked(evt);
            }
        });
        jPanel4.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel4ComponentShown(evt);
            }
        });

        sjInCourseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(sjInCourseTable);

        addButton.setText("Add Subject To Course");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        removeButton.setText("Remove Subject From Course");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Course:");

        courseComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        courseComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseComboBoxActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 3, 30)); // NOI18N
        jLabel6.setText("Show Subjects in Course");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addComponent(addButton)
                        .addGap(59, 59, 59)
                        .addComponent(removeButton))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(220, 220, 220)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(courseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(courseInfoText, javax.swing.GroupLayout.PREFERRED_SIZE, 573, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(103, 103, 103)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 760, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(courseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(courseInfoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton)
                    .addComponent(removeButton))
                .addContainerGap(292, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Edit Subject In Course", jPanel4);

        jPanel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel5MouseClicked(evt);
            }
        });
        jPanel5.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel5ComponentShown(evt);
            }
        });

        subjectRecordTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(subjectRecordTable);

        withdrawButton.setText("Withdraw student from this subject");
        withdrawButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                withdrawButtonActionPerformed(evt);
            }
        });

        enrollButton.setText("Enroll to a new subject");
        enrollButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enrollButtonActionPerformed(evt);
            }
        });

        studentLabel.setText("Student ID:");

        findStudentButton.setText("Find Student");
        findStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findStudentButtonActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 3, 30)); // NOI18N
        jLabel7.setText("Subject Record For a Student");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(159, 159, 159)
                                .addComponent(withdrawButton)
                                .addGap(51, 51, 51)
                                .addComponent(enrollButton, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(215, 215, 215)
                                .addComponent(studentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(studentIDText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(findStudentButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(studentInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(176, 176, 176)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 67, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 821, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(studentInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(studentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(studentIDText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(findStudentButton)))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(withdrawButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enrollButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(319, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Enroll/Withdraw Student", jPanel5);

        jPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel3MouseClicked(evt);
            }
        });
        jPanel3.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel3ComponentShown(evt);
            }
        });

        jLabel2.setText("Choose a subject:");

        subjectList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        subjectList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectListActionPerformed(evt);
            }
        });

        recordTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        recordTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                recordTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(recordTable);

        recordMarkButton.setText("Record Mark");
        recordMarkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recordMarkButtonActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 3, 30)); // NOI18N
        jLabel8.setText("Record Marks For Subject");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 839, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(319, 319, 319)
                                .addComponent(recordMarkButton))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(306, 306, 306)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(subjectList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(201, 201, 201)
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel8)
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(subjectList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(recordMarkButton)
                .addContainerGap(332, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Record Mark", jPanel3);

        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel2MouseClicked(evt);
            }
        });
        jPanel2.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel2ComponentShown(evt);
            }
        });

        jLabel3.setText("Choose a Report:");

        reportComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        reportComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportComboBoxActionPerformed(evt);
            }
        });

        reportTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(reportTable);

        jLabel9.setFont(new java.awt.Font("Tahoma", 3, 30)); // NOI18N
        jLabel9.setText("University System Reports");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 829, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(217, 217, 217)
                                .addComponent(jLabel9))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(305, 305, 305)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(reportComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel9)
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(reportComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(360, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Reports", jPanel2);

        getContentPane().add(jTabbedPane1, java.awt.BorderLayout.PAGE_START);
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel1ComponentShown
        // TODO add your handling code here:
        fillComboBox();
        fillTable();
    }//GEN-LAST:event_jPanel1ComponentShown

    private void displayOptionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayOptionsActionPerformed
        // TODO add your handling code here:
        fillTable();
    }//GEN-LAST:event_displayOptionsActionPerformed

    private void recordMarkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recordMarkButtonActionPerformed
        // TODO add your handling code here:
        int ind=recordTable.getSelectedRow();
        if(ind>=0)
        {
            GUIRecordMark recordMark = new GUIRecordMark(admin,Long.parseLong((String) recordTable.getValueAt(ind,0)),(String) subjectList.getSelectedItem());
            recordMark.setSize(400, 400);
            recordMark.setVisible(true);
            fillRecordTable();
        }
    }//GEN-LAST:event_recordMarkButtonActionPerformed

    private void jPanel3ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel3ComponentShown
        // TODO add your handling code here:
        updateSubjectSelection();
        fillRecordTable();
    }//GEN-LAST:event_jPanel3ComponentShown

    private void subjectListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectListActionPerformed
        // TODO add your handling code here:
        fillRecordTable();
    }//GEN-LAST:event_subjectListActionPerformed

    private void recordTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_recordTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_recordTableMouseClicked

    private void jPanel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseClicked
        // TODO add your handling code here:
        fillRecordTable();
    }//GEN-LAST:event_jPanel3MouseClicked

    private void jPanel2ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel2ComponentShown
        // TODO add your handling code here:
        updateReportComboBox();
        fillReportTable();
    }//GEN-LAST:event_jPanel2ComponentShown

    private void jPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseClicked
        // TODO add your handling code here:
        fillReportTable();
    }//GEN-LAST:event_jPanel2MouseClicked

    private void reportComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportComboBoxActionPerformed
        // TODO add your handling code here:
        fillReportTable();
    }//GEN-LAST:event_reportComboBoxActionPerformed

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        // TODO add your handling code here:
        fillTable();
    }//GEN-LAST:event_jPanel1MouseClicked

    private void addStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentButtonActionPerformed
        // TODO add your handling code here:
        GUIAddStudent addStudent = new GUIAddStudent(admin);
        addStudent.setSize(600,600);
        addStudent.setVisible(true);
        fillTable();
    }//GEN-LAST:event_addStudentButtonActionPerformed

    private void addSubjectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSubjectButtonActionPerformed
        // TODO add your handling code here:
        GUIAddSubject addSubject = new GUIAddSubject(admin);
        addSubject.setSize(600,600);
        addSubject.setVisible(true);
        fillTable();
    }//GEN-LAST:event_addSubjectButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        Long courseID = Long.parseLong(courseComboBox.getSelectedItem().toString());
        GUIAddSubjectToCourse addSj = new GUIAddSubjectToCourse(admin,courseID);
        addSj.setSize(600,400);
        addSj.setVisible(true);
        fillSjInCourseTable();
    }//GEN-LAST:event_addButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        // TODO add your handling code here:
        int ind=sjInCourseTable.getSelectedRow();
        Long courseID = Long.parseLong(courseComboBox.getSelectedItem().toString());
        if(ind>=0)
        {
            if(!admin.removeSubjectFromCourse(admin.getUsername(), admin.getPassword(), sjInCourseTable.getValueAt(ind,0).toString().trim(), courseID))
            {
                JOptionPane.showMessageDialog(null, "CAN'T remove Subject from course! There are studentss in this subject");
            } else
            {
                JOptionPane.showMessageDialog(null, "Subject removed from course!");
                fillSjInCourseTable();
            }
            fillSjInCourseTable();
        }
    }//GEN-LAST:event_removeButtonActionPerformed

    private void jPanel4ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel4ComponentShown
        // TODO add your handling code here:
        fillCourseComboBox();
        fillSjInCourseTable();
    }//GEN-LAST:event_jPanel4ComponentShown

    private void jPanel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel4MouseClicked
        // TODO add your handling code here:
        fillSjInCourseTable();
    }//GEN-LAST:event_jPanel4MouseClicked

    private void addCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCourseButtonActionPerformed
        // TODO add your handling code here:
        GUIAddCourse addCourse = new GUIAddCourse(admin);
        addCourse.setSize(600,800);
        addCourse.setVisible(true);
    }//GEN-LAST:event_addCourseButtonActionPerformed

    private void courseComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseComboBoxActionPerformed
        // TODO add your handling code here:
        fillSjInCourseTable();
    }//GEN-LAST:event_courseComboBoxActionPerformed

    private void withdrawButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_withdrawButtonActionPerformed
        // TODO add your handling code here:
        int ind=subjectRecordTable.getSelectedRow();
        try
        {
            Long studentID=Long.parseLong(studentInfo.getText().trim());
            if(ind>=0)
            {
                if(!admin.withdraw(admin.getUsername(), admin.getPassword(), subjectRecordTable.getValueAt(ind, 0).toString().trim(), studentID))
                {
                    JOptionPane.showMessageDialog(null, "Cant withdraw!");
                } else
                {
                    JOptionPane.showMessageDialog(null, "Withdraw Successful!");
                }
                fillTable();

            }
        }
        catch(NumberFormatException e)
        {
            JOptionPane.showMessageDialog(null, "Please try again!");
        }
    }//GEN-LAST:event_withdrawButtonActionPerformed

    private void enrollButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enrollButtonActionPerformed
        // TODO add your handling code here:
        try
        {
            Long studentID=Long.parseLong(studentInfo.getText().trim());
            Student student = admin.findStudent(admin.getUsername(), admin.getPassword(), studentID);
            GUIStudentEnrollSubject enroll = new GUIStudentEnrollSubject(admin,student);
            enroll.setSize(400,400);
            enroll.setVisible(true);
            studentIDText.setText("");
        }
        catch(NumberFormatException e)
        {
            JOptionPane.showMessageDialog(null, "Please try again!");
        }
    }//GEN-LAST:event_enrollButtonActionPerformed

    private void jPanel5ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel5ComponentShown
        // TODO add your handling code here:
        studentIDText.setText("");
        studentInfo.setText("");
        fillStudentTable();
    }//GEN-LAST:event_jPanel5ComponentShown

    private void findStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findStudentButtonActionPerformed
        // TODO add your handling code here:
        try
        {
            Long studentID = Long.parseLong(studentIDText.getText().trim());
            if(admin.findStudent(admin.getUsername(), admin.getPassword(), studentID)==null)
            {
                studentInfo.setText("Can't find Student.");
                studentIDText.setText("");
            } else
            {
                studentInfo.setText(studentID+"");
                studentIDText.setText("");
            }
            fillStudentTable();
        }
        catch(NumberFormatException e)
        {
            JOptionPane.showMessageDialog(null, "Please enter a long number only");
        }
        
    }//GEN-LAST:event_findStudentButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // TODO add your handling code here:
        Login login = new Login(admin);
        login.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        login.setSize(500, 500);
        login.setVisible(true);
        this.hide();
    }//GEN-LAST:event_exitButtonActionPerformed

    private void jPanel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseClicked
        // TODO add your handling code here:
        fillStudentTable();
    }//GEN-LAST:event_jPanel5MouseClicked

    private void assignButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignButtonActionPerformed
        // TODO add your handling code here:
        GUIAssignLecturer assign = new GUIAssignLecturer(admin);
        assign.setSize(600, 400);
        assign.setVisible(true);
    }//GEN-LAST:event_assignButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        switch(displayOptions.getSelectedIndex())
        {
            case 1:
                JOptionPane.showMessageDialog(null,"Not supported yet. Please try edit with Students");
                break;
            case 2:
                int ind=this.displayTable.getSelectedRow();
                if(ind>=0)
                {
                    Long studentID = Long.parseLong(displayTable.getValueAt(ind, 0).toString());
                    Student student = admin.findStudent(admin.getUsername(), admin.getPassword(), studentID);
                    GUIEditStudent editStudent = new GUIEditStudent(admin,student);
                    editStudent.setSize(600,600);
                    editStudent.setVisible(true);
                    fillTable();
                }
                break;
            case 3:
                JOptionPane.showMessageDialog(null,"Not supported yet. Please try edit with Students");
                break;
            default:
                JOptionPane.showMessageDialog(null,"Not supported yet. Please try edit with Students"); 
        }
    }//GEN-LAST:event_editButtonActionPerformed

    private void jTabbedPane1ComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTabbedPane1ComponentHidden
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTabbedPane1ComponentHidden

    private void fillComboBox()
    {
        String[] options = {"Subjects","Courses","Students","Lecturer"};
        DefaultComboBoxModel model = new DefaultComboBoxModel<>(options);
        displayOptions.setModel(new DefaultComboBoxModel<>(options));
    }
    private void fillTable()
    {
        switch(displayOptions.getSelectedIndex())
        {
            case 1:
                fillTableCourses();
                break;
            case 2:
                fillTableStudents();
                break;
            case 3:
                fillTableLecs();
                break;
            default:
                fillTableSubjects(); 
        }
    }
    
    private void fillTableCourses() 
    {
        String [] header={"Course ID","Course Type","Course Name","Other Information"};
        DefaultTableModel model=new DefaultTableModel(header,0);
        this.displayTable.setModel(model);
        for (Course course:admin.getAllCourses().values())
        {
            String[] row=new String[4];
            row[0]=course.getID()+"";
            row[1]=course.getType1()+"";
            row[2]=course.getName()+"";
            if(row[1].equals("Online"))
            {
                row[3]="URL: "+course.getURL();
            } else
            {
                row[3]="Campus: "+course.getCampus()+" Session:"+course.getStartingSession()+" Discount:"+course.getDiscount();
            }
            model.addRow(row);
        } 
    }

    private void fillTableStudents() 
    {
        String [] header={"Student ID","Student Type","Student Name","Course","Other Information"};
        DefaultTableModel model=new DefaultTableModel(header,0);
        this.displayTable.setModel(model);
        for (Student student:admin.getAllStudents().values())
        {
            String[] row=new String[5];
            row[0]=student.getID()+"";
            row[1]=student.getType()+"";
            row[2]=student.getName()+"";
            row[3]=student.getCourseID(student.getUsername(), student.getPassword())+"";
            row[4]=student.getExtraInfo()+"";
            model.addRow(row);
        }
    }

    private void fillTableLecs() 
    {
        String [] header={"Lecturer ID","Lecturer Name","Degree","School","Teaching Subjects"};
        DefaultTableModel model=new DefaultTableModel(header,0);
        this.displayTable.setModel(model);
        for(Lecturer lec:admin.getAllLecturers().values())
        {
            String[] row=new String[5];
            row[0]=lec.getID()+"";
            row[1]=lec.getName()+"";
            row[2]=lec.getDegree()+"";
            row[3]=lec.getSchool()+"";
            row[4]=lec.getSubjects(lec.getUsername(), lec.getPassword()).keySet().toString();
            model.addRow(row);
        }
    }
    
    private void fillTableSubjects() 
    {
        String [] header={"Subject ID","Subject Type","Subject Name","Fee"};
        DefaultTableModel model=new DefaultTableModel(header,0);
        this.displayTable.setModel(model);
        for(Subject subject:admin.getAllSubjects().values())
        {
            String[] row=new String[4];
            row[0]=subject.getID()+"";
            row[1]=subject.getType()+"";
            row[2]=subject.getName()+"";
            row[3]=subject.getFee()+"";
            model.addRow(row);
        }
    }
    
    private void fillRecordTable() 
    {
        String [] header={"Student ID","Student Name","Score","Grade"};
        DefaultTableModel model=new DefaultTableModel(header,0);
        this.recordTable.setModel(model);
        String sjCode = (String) subjectList.getSelectedItem();
        for (Student student:admin.getEnrolledStudentsPerSubject(admin.getUsername(), admin.getPassword()).get(sjCode))
        {
            String[] row=new String[4];
            row[0]=student.getID()+"";
            row[1]=student.getName()+"";
            Result result = student.getResult(student.getUsername(), student.getPassword(), sjCode);
            row[2]=result.getMark()+"";
            row[3]=result.getGrade()+"";
            model.addRow(row);
        } 
    }

    private void updateSubjectSelection() 
    {
        String[] subjects = admin.getAllSubjects().keySet().toArray(new String[admin.getAllSubjects().size()]);
        subjectList.setModel(new DefaultComboBoxModel<>(subjects));
    }
    
    private void fillCourseComboBox() 
    {
        String[] courses = new String[admin.getAllCourses().size()];
        int i=0;
        for(Long courseID:admin.getAllCourses().keySet())
        {
            courses[i]=courseID+"";
            i++;
        }
        courseComboBox.setModel(new DefaultComboBoxModel<>(courses));
    }
    
    private void updateReportComboBox() 
    {
        String[] options = {"Course Report","Country Report","Subject Type Report","Mark Range Report"};
        DefaultComboBoxModel model = new DefaultComboBoxModel<>(options);
        reportComboBox.setModel(new DefaultComboBoxModel<>(options));
    }

    private void fillReportTable() 
    {
        reportTable.setEnabled(false);
        switch(reportComboBox.getSelectedIndex())
        {
            case 0:
                courseReport();
                break;
            case 1:
                countryReport();
                break;
            case 2:
                subjectTypeReport();
                break;
            default:
                markRangeReport();     
        }
    }
    
    private void courseReport() 
    {
        
        String [] header={"Course ID","Students","total fee($)"};
        DefaultTableModel model=new DefaultTableModel(header,0);
        this.reportTable.setModel(model);
        Map<Long,Long> countStudents= new HashMap<>();
        Map<Long,Double> totalTuitionFee = new HashMap<>();
        //admin.reportForCourses(admin.getUsername(),admin.getPassword(),countStudents, totalTuitionFee);
        admin.reportForCourseLambda(admin.getUsername(), admin.getPassword(),countStudents,totalTuitionFee);
        for (Long courseID:countStudents.keySet())
        {
            String[] row=new String[3];
            row[0]=courseID+"";
            row[1]=countStudents.get(courseID)+"";
            row[2]=totalTuitionFee.get(courseID)+"";
            model.addRow(row);
        }
    }

    private void countryReport() 
    {
        HashMap<String,Long> countStudents = new HashMap<>();
        HashMap<String,Double> totalTuitionFee = new HashMap<>();
        //admin.reportForCountry(admin.getUsername(),admin.getPassword(), countStudents, totalTuitionFee);
        admin.reportForCountryLambda(admin.getUsername(), admin.getPassword(), countStudents, totalTuitionFee);
        String [] header={"Country","Students","total fee($)"};
        DefaultTableModel model=new DefaultTableModel(header,0);
        this.reportTable.setModel(model);
        for (String country:countStudents.keySet())
        {
            String[] row=new String[3];
            row[0]=country;
            row[1]=countStudents.get(country)+"";
            row[2]=totalTuitionFee.get(country)+"";
            model.addRow(row);
        }
    }

    private void subjectTypeReport() 
    {
        HashMap<SubjectType,Integer> countSubjects = new HashMap<>();
        HashMap<SubjectType,Integer> countStudents2 = new HashMap<>();
        HashMap<SubjectType,Result> averageMarks = new HashMap<>();
        HashMap<SubjectType,Double> totalTuitionFee2 = new HashMap<>();
        admin.reportForSubjectType(admin.getUsername(),admin.getPassword(), countSubjects, countStudents2, averageMarks, totalTuitionFee2);
        String [] header={"Subject Type","Subjects","Students","Average Mark","total fee($)"};
        DefaultTableModel model=new DefaultTableModel(header,0);
        this.reportTable.setModel(model);
        for (SubjectType type:SubjectType.values())
        {
            String[] row=new String[5];
            row[0]=type.name();
            row[1]=countSubjects.get(type)+"";
            row[2]=countStudents2.get(type)+"";
            row[3]=averageMarks.get(type)+"";
            row[4]=totalTuitionFee2.get(type)+"";
            model.addRow(row);
        }
    }

    private void markRangeReport() 
    {
        int range[] = {0,40,70,100};
        HashMap<String,Integer[]> markRangePerLec = admin.markRangePerLecturer(admin.getUsername(),admin.getPassword(), range);
        String [] header={"Lecturer ID",range[0]+"-"+range[1],range[1]+"-"+range[2],range[2]+"-"+range[3]};
        DefaultTableModel model=new DefaultTableModel(header,0);
        this.reportTable.setModel(model);
        for (String lecID:markRangePerLec.keySet())
        {
            Integer[] counts = markRangePerLec.get(lecID);
            String[] row=new String[4];
            row[0]=lecID;
            for(int i=1;i<row.length;i++)
            {
                row[i]=counts[i-1]+"";
            }
            model.addRow(row);
        }

    }
    
    private void fillSjInCourseTable() 
    {
        String [] header={"Subject ID","Subject Name"};
        Long courseID = Long.parseLong(courseComboBox.getSelectedItem().toString());
        Course course = admin.findCourse(admin.getUsername(), admin.getPassword(), courseID);
        courseInfoText.setText(course.toString());
        DefaultTableModel model=new DefaultTableModel(header,0);
        this.sjInCourseTable.setModel(model);
        for (Subject subject:course.getSubjects().values())
        {
            String[] row=new String[2];
            row[0]=subject.getID()+"";
            row[1]=subject.getName()+"";
            model.addRow(row);
        }  
        
    }
    
    private void fillStudentTable() 
    {
        String [] header={"Subject ID","Subject Name","Score","Grade"};
        DefaultTableModel model=new DefaultTableModel(header,0);
        this.subjectRecordTable.setModel(model);
        try
        {

                Long studentID = Long.parseLong(studentInfo.getText().trim());
                Student student = admin.findStudent(admin.getUsername(), admin.getPassword(),studentID);
                if(student!=null)
                {
                    for (Subject subject:student.getSubjects(student.getUsername(), student.getPassword()).values())
                    {
                        String[] row=new String[4];
                        row[0]=subject.getID()+"";
                        row[1]=subject.getName()+"";
                        Result result = student.getResult(student.getUsername(), student.getPassword(), subject.getID());
                        row[2]=result.getMark()+"";
                        row[3]=result.getGrade()+"";
                        model.addRow(row);
                    } 
                }
        }
        catch(NumberFormatException e)
        {
            
        }
        
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton addCourseButton;
    private javax.swing.JButton addStudentButton;
    private javax.swing.JButton addSubjectButton;
    private javax.swing.JButton assignButton;
    private javax.swing.JComboBox<String> courseComboBox;
    private javax.swing.JTextField courseInfoText;
    private javax.swing.JComboBox<String> displayOptions;
    private javax.swing.JTable displayTable;
    private javax.swing.JButton editButton;
    private javax.swing.JButton enrollButton;
    private javax.swing.JButton exitButton;
    private javax.swing.JButton findStudentButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton recordMarkButton;
    private javax.swing.JTable recordTable;
    private javax.swing.JButton removeButton;
    private javax.swing.JComboBox<String> reportComboBox;
    private javax.swing.JTable reportTable;
    private javax.swing.JTable sjInCourseTable;
    private javax.swing.JTextField studentIDText;
    private javax.swing.JLabel studentInfo;
    private javax.swing.JLabel studentLabel;
    private javax.swing.JComboBox<String> subjectList;
    private javax.swing.JTable subjectRecordTable;
    private javax.swing.JButton withdrawButton;
    // End of variables declaration//GEN-END:variables

    

    

    
}
